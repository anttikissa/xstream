## Introduction

> "It is better to have 100 functions operate on one data structure than
> 10 functions on 10 data structures." â€”Alan Perlis

This library is about streams.

A stream has two interesting properties:

- It has a /a current value/ (which may be `undefined`)
- It /broadcasts/ its value when it's updated

An example of using streams:

	var s1 = stream();
	var s2 = stream();
	var s3 = stream.combine(s1, s2, function(a, b) { return a + b });
	s1.update(1);
	s2.update(2);
	s3.forEach(function(value) {
		console.log(value);
	});

	stream.tick();
	// -> 3

That's it.  Mostly.



## A sketch

### Simple dependencies: .map, .filter, .combine
### merge
### Maybe .reduce too
### stream.from() -- kitchen sink
### rewire
### what does `tick()` do?
### Some nice examples (fibonacci? snake?)

Maybe to its own chapter:

## Time-based things (eventually)

### delay (both for ticks and millisecond timeouts)
### pause(), play(), etc.

