function toArray(e){return Array.prototype.slice.apply(e)}function Stream(e){this.listeners=[],this.parents=[],this.children=[],this.value=void 0,this.id=stream.nextId++,void 0!==e&&this.set(e)}function depends(){for(var e=arguments.length,t=arguments[e-2],n=arguments[e-1],r=0;e-2>r;r++)arguments[r].children.push(t),t.parents.push(arguments[r]);return t.f=n,t}function map(e,t){return depends(e,stream(),function(){this.newValue=t(e.newValue)})}function filter(e,t){return depends(e,stream(),function(){t(e.newValue)&&(this.newValue=e.newValue)})}function uniq(e){return depends(e,stream(),function(){this.value!==e.newValue&&(this.newValue=e.newValue)})}function reduce(e,t){return depends(e,stream(),function(){this.newValue=null!=this.value?t(this.value,e.newValue):e.newValue})}function hasNewValue(e){return e.hasOwnProperty("newValue")}function mostRecentValue(e){return e.hasOwnProperty("newValue")?e.newValue:e.value}function combine(){var e=toArray(arguments),t=e.pop(),n=e.concat([stream(),function(){this.newValue=t.apply(null,e.map(mostRecentValue))}]);return depends.apply(null,n)}function merge(){var e=toArray(arguments),t=e.concat([stream(),function(){for(var t=this,n=0,r=e.length;r>n;n++)hasNewValue(e[n])&&(t.newValue=e[n].newValue)}]);return depends.apply(null,t)}function rewire(e,t){return e.parents.forEach(function(t){t.children.splice(t.children.indexOf(e))}),e.parents=[],depends(t,e,function(){this.newValue=t.newValue})}function keys(e){if(Object.keys)return Object.keys(e);var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(n);return t}function find(e,t){for(var n=0,r=e.length;r>n;n++){{e[n]}if(t(e[n]))return e[n]}}function deferNextTick(e){function t(){n||e()}var n=!1;return process.nextTick(t),function(){n=!0}}function deferTimeout(e){var t=setTimeout(e);return function(){clearTimeout(t)}}function Transaction(){var e=this;this.cancel=defer(function(){e.commit()}),this.ops=[]}function updateOrder(e){function t(e){allNodes.hasOwnProperty(e.id)||(allNodes[e.id]=e,e.children.forEach(function(e){parentCounts[e.id]=(parentCounts[e.id]||0)+1,t(e)}))}function n(e){var t=allNodes[e];t.children.forEach(function(e){parentCounts[e.id]--}),delete parentCounts[e],delete allNodes[e],nodesToUpdate.push(t)}for(parentCounts={},allNodes={},nodesToUpdate=[],e.forEach(function(e){parentCounts[e.id]=0,t(e)});;){var r=keys(parentCounts);if(0===r.length)break;var a=find(r,function(e){return 0===parentCounts[e]});n(a)}return nodesToUpdate}Stream.prototype={broadcast:function(){for(var e=0,t=this.listeners.length;t>e;e++)this.listeners[e](this.value)},forEach:function(e){return this.listeners.push(e),this},set:function(e,t){var n=this;if(t)return setTimeout(function(){var t=stream.transaction();t.set(n,e)},t),this;var r=stream.transaction();return r.set(n,e),this},map:function(e){return map(this,e)},filter:function(e){return filter(this,e)},uniq:function(){return uniq(this)},reduce:function(e){return reduce(this,e)},rewire:function(e){return rewire(this,e)},toString:function(){return"stream("+this.value+", id: "+this.id+")"},commit:function(){return stream.transaction().commit(),this},f:function(){},ends:function(){return this.endStream||(this.endStream=stream()),this.endStream},end:function(){this.endStream&&this.endStream.set(this.value)}};var stream=function(e){return new Stream(e)};stream.nextId=0,stream.transaction=function(){return stream.tx||(stream.tx=new Transaction)},stream.fromArray=function(e){var t=stream(),n=function(){e.length&&(t.set(e.shift()),defer(n))};return n(),t},stream.fromValues=function(){var e=Array.prototype.slice.call(arguments);return stream.fromArray.call(stream,e)},stream.fromString=function(e){return stream.fromArray(e.split(""))},stream.combine=combine,stream.merge=merge,stream.zip=function(){var e=toArray(arguments);return e.push(Array),stream.combine.apply(null,e)};var defer="undefined"!=typeof process&&process.nextTick?deferNextTick:deferTimeout;Transaction.prototype.set=function(e,t){this.ops.push([e,t])},Transaction.prototype.commit=function(){this.cancel&&this.cancel(),stream.tx===this&&delete stream.tx;for(var e={},t=[],n=0,r=this.ops.length;r>n;n++){var a=this.ops[n],i=a[0];i.newValue=a[1],e[i.id]||(t.push(i),e[i.id]=!0)}var s=updateOrder(t);s.forEach(function(e){e.f()}),s.forEach(function(e){hasNewValue(e)&&(e.value=e.newValue,delete e.newValue,e.broadcast())})},module.exports=stream;