function plus(e,t){return e+t}function inc(e){return e+1}function nop(){}function contains(e,t){return-1!==e.indexOf(t)}function copyArray(e){return Array.prototype.slice.apply(e)}function hasNewValue(e){return e.hasOwnProperty("newValue")}function deferNextTick(e){function t(){r||e()}var r=!1;return process.nextTick(t),function(){r=!0}}function deferTimeout(e){var t=setTimeout(e);return function(){clearTimeout(t)}}function terminate(){process.exit(1)}function assert(e,t,r){var s=r?3:2;if(!e){if(t){var a=new Error("assert failed: "+t);throw a.skipLines=s,a}var a=new Error("assert failed");throw a.skipLines=s,a}}function expect(e){var t=[e];contains(e,"; ")&&(t=e.split("; "));for(var r=0;r<t.length;r++){var s=t[r],a=consoleOutput.shift();assert("string"==typeof a,'expected "'+s+'", got no output',!0),assert(a===s,'expected "'+s+'", got "'+a+'"',!0)}}function expectNoOutput(){assert(0===consoleOutput.length,'expected no output, got "'+consoleOutput[0],!0)}function log(){console.log.apply(console.log,arguments)}function Stream(e){this.value=e,this.listeners=[],this.id=Stream.nextId++}function stream(e){return new Stream(e)}function collectTests(e,t,r){var s=1;for(var a in e){var n=r?r+"."+s:s,o=t?t+"."+a:a,c="Test "+n+": "+o,i=e[a];tests.push([c,i]),collectTests(e[a],o,n),s++}}function testAll(){function e(){function t(){assert(!stream.cancelDeferredTick,"test functions should not leave deferred .tick()s behind"),expectNoOutput(),e()}var r=tests.shift();if(r){var s=r[0],a=r[1];try{log(s+"\n"),1===a.length?a(t):(a(),t())}catch(n){log("Error:",n.message+"\n"),log(n.stack.split("\n").slice(n.skipLines||0).join("\n")),terminate()}}}collectTests(test),e()}var defer="undefined"!=typeof process&&process.nextTick?deferNextTick:deferTimeout,consoleOutput=[];test={},Stream.nextId=1,test.Stream=function(){var e=new Stream;assert("object"==typeof e),assert(e instanceof Stream),assert(void 0===e.value),assert(0===e.listeners.length),assert(123===new Stream(123).value);var t=(new Stream).id;assert("number"==typeof t);var r=(new Stream).id;assert("number"==typeof r)},module.exports=stream,test.stream=function(){assert(stream()instanceof Stream),assert(123===stream(123).value)},Stream.prototype.set=function(e){return stream.streamsToUpdate.push(this),this.newValue=e,stream.ensureDeferredTick(),this},test.Stream.set=function(e){var t=stream(),r=t.set(1);assert(t===r,"stream.set() should return the stream itself"),assert(contains(stream.streamsToUpdate,t)),assert(void 0===t.value,"stream.value should be undefined before tick()"),stream.tick(),assert(!contains(stream.streamsToUpdate,t),"tick should clear stream.streamsToUpdate"),assert(1===t.value,"stream.value should be set after tick()"),t.set(2),assert(1===t.value,"s.set() should not set the value immediately"),defer(function(){assert(2===t.value,"s.set() should set the value after the next tick"),e()})},Stream.prototype.broadcast=function(){for(var e=0,t=this.listeners.length;t>e;e++)this.listeners[e].call(this,this.value)},test.Stream.broadcast=function(){var e=stream(123);e.forEach(function(e){stream.log("first",e)}).forEach(function(e){stream.log("second",e)}),e.broadcast(),expect("first 123; second 123")},Stream.prototype.forEach=function(e){return this.listeners.push(e),this},test.Stream.forEach=function(){var e=stream();assert(e===e.forEach(nop),".forEach should return the stream itself"),e.forEach(function(t){assert(this===e,'listener should receive the stream in "this"'),stream.log("s",t)}),e.set(1),stream.tick(),expect("s 1"),stream(123).forEach(function(){assert(!1,".forEach functions should not be called without .set()")})},Stream.prototype.map=function(){},stream.log=function(){function e(e){return"string"==typeof e||"number"==typeof e?String(e):require("util").inspect(e)}var t=copyArray(arguments).map(e).join(" ");consoleOutput.push(t),console.log(t)},test.stream.log=function(){stream.log("hello"),expect("hello"),stream.log(123,[2,3,4],{x:"foo","y z":"bar"}),expect("123 [ 2, 3, 4 ] { x: 'foo', 'y z': 'bar' }")},stream.ensureDeferredTick=function(){stream.cancelDeferredTick||(stream.cancelDeferredTick=defer(stream.tick))},test.stream.ensureDeferredTick=function(){assert("undefined"==typeof stream.cancelDeferredTick),stream.ensureDeferredTick(),assert("function"==typeof stream.cancelDeferredTick),stream.ensureDeferredTick(),assert("function"==typeof stream.cancelDeferredTick),stream.tick(),assert("undefined"==typeof stream.cancelDeferredTick)},stream.streamsToUpdate=[],stream.tick=function(e){stream.cancelDeferredTick&&(stream.cancelDeferredTick(),delete stream.cancelDeferredTick);for(var t={},r=0,s=stream.streamsToUpdate.length;s>r;r++){var a=stream.streamsToUpdate[r];hasNewValue(a)&&(t[a.id]=a,a.value=a.newValue,delete a.newValue)}stream.streamsToUpdate=[];for(var n in t)t[n].broadcast();e>1&&stream.tick(e-1)},test.stream.tick=function(){function e(e){this.set(e+1)}var t=stream();t.forEach(e),t.set(0),stream.tick(),assert(0===t.value),stream.tick(),assert(1===t.value),t.listeners=[],stream.tick(),t.set(0),t.forEach(e),stream.tick(),assert(0===t.value),stream.tick(5),assert(5===t.value),t.listeners=[],stream.tick()},stream.fromArray=function(){var e=stream();return e};var tests=[];process.env.XSTREAM_TEST&&testAll();